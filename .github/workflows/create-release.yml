name: Validate bootc build and release

on:
  push:
    branches:
      - main

env:
  REGISTRY_USER: rh-ee-chbutler
  IMAGE_REGISTRY: quay.io
  IMAGE: rhel-dev-arm

jobs:
  testbuild:
    runs-on: ubuntu-24.04-arm
    container:
      image: registry.access.redhat.com/ubi9/ubi
      options: --privileged    
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
    - name: Get container tools in UBI builder
      run: dnf -y install podman buildah skopeo make wget git
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Access a subscription via activation key
      env:
        SMDEV_CONTAINER_OFF: 1
        orgid: ${{ secrets.RHT_ORGID }}
        activation_key: ${{ secrets.RHT_ACT_KEY }}

      run: subscription-manager register --org=$orgid --activationkey=$activation_key
    - name: Workaround open podman-login action issue
      env:
        auth: "{ \"auths\": {} }"
      run: |
        mkdir -p $HOME/.docker
        echo $auth > $HOME/.docker/config.json
    - name: Log in to Quay.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        registry: ${{ env.IMAGE_REGISTRY }}
        auth_file_path: /run/containers/0/auth.json
    - name: Log in to registry.redhat.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ secrets.RH_REGISTRY_USER }} # service account
        password: ${{ secrets.RH_REGISTRY_PASSWORD }} # service accounts
        registry: registry.redhat.io
        auth_file_path: /run/containers/0/auth.json

    - name: Pull deps
      run: make get-deps

    - name: Build Image
      uses: redhat-actions/buildah-build@v2
      with:
        image: "quay.io/${{ env.REGISTRY_USER }}/${{ env.IMAGE }}"
        tags: latest ${{ github.sha }}
        containerfiles: |
         ./Containerfile
    - name: Clean up the subscription
      if: always()
      env:
        SMDEV_CONTAINER_OFF: 1
      run: subscription-manager unregister
  release:
    runs-on: ubuntu-latest
    needs: testbuild
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0
        token: ${{ secrets.FG_PAT }}
    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@v9.8.8
      with:
        github_token: ${{ secrets.FG_PAT }}